name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build
        run: |
          yarn install
          yarn build
      - name: Test
        run: yarn test --coverage --watchAll=false
      - uses: codecov/codecov-action@v1
        with:
          flags: unitests

  e2e:
    needs: [unit-test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome, firefox]
    services:
      keycloak:
        image: quay.io/keycloak/keycloak:12.0.1
        ports:
          - 8180:8080
        env:
          KEYCLOAK_USER: admin
          KEYCLOAK_PASSWORD: admin
        options: >-
          --health-cmd "curl --fail http://localhost:8080/auth || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      backend-db:
        image: postgres:13.1
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: controls_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Keycloak Admin CLI
        uses: carlosthe19916/keycloak-action@0.4
        with:
          server: http://keycloak:8080/auth
          username: admin
          password: admin
          kcadm: create realms -f konveyor-realm.json
      - name: Controls API
        run: |
          docker run -d --name controls --network ${{ job.services.backend-db.network }} --network-alias controls -p 8080:8080 \
          -e QUARKUS_HTTP_PORT=8080 \
          -e QUARKUS_DATASOURCE_USERNAME=user \
          -e QUARKUS_DATASOURCE_PASSWORD=password \
          -e QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://backend-db:5432/controls_db \
          -e QUARKUS_OIDC_AUTH_SERVER_URL=http://keycloak:8080/auth/realms/konveyor \
          -e QUARKUS_OIDC_CLIENT_ID=controls-api \
          -e QUARKUS_OIDC_CREDENTIALS_SECRET=secret quay.io/mrizzi/poc-controls:latest-native
          sleep 5s && docker logs controls
      - name: Build
        run: |
          yarn install
          yarn build:instrumentation
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: false
          start: yarn run ui:start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          config: pageLoadTimeout=100000
          browser: ${{ matrix.browser }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: e2e-screenshots-${{ matrix.os }}-${{ matrix.browser }}
          path: cypress/screenshots
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: e2e-videos-${{ matrix.os }}-${{ matrix.browser }}
          path: cypress/videos
      - uses: codecov/codecov-action@v1
        with:
          flags: e2etests

  container-images:
    if: ${{ github.event_name != 'pull_request' && github.repository_owner == 'carlosthe19916' }}
    runs-on: ubuntu-latest
    needs: [unit-test, e2e]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Build
        run: |
          yarn install
          yarn build
      - name: Push to Quay.io
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          registry: quay.io
          name: carlosthe19916/controls-ui
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}
          dockerfile: Dockerfile
          snapshot: false
          tags: "master"
